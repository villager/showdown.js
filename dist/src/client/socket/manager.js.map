{
  "version": 3,
  "sources": ["../../../../src/client/socket/manager.ts"],
  "sourcesContent": ["/***\r\n * Socket Manager\r\n * */\r\nimport SockJS = require(\"sockjs-client\");\r\n\r\nimport { ConnectionManager, ChatManager, SendManager} from '../../managers';\r\n\r\nexport class SocketManager {\r\n\tclient: Client;\r\n\tconnection: ConnectionManager;\r\n\tchat: ChatManager;\r\n\tsocket: null|any;\r\n\tsending: AnyObject;\r\n\tnextSend: number;\r\n\tmaxLinesSend: number;\r\n\tconstructor(client: Client) {\r\n\t\tthis.client = client;\r\n\t\tthis.connection = new ConnectionManager(client);\r\n\t\tthis.chat = new ChatManager(client);\r\n\t\tthis.socket = null;\r\n\t\tthis.sending = {};\r\n\t\tthis.nextSend = 0;\r\n\t\tthis.maxLinesSend = 3;\r\n\t}\r\n\tgetSendId() {\r\n\t\treturn this.nextSend++;\r\n\t}\r\n\tsetNamed() {\r\n\t\tthis.connection.status.named = true;\r\n\t}\r\n\tdestroy(e?: any) {\r\n\t\tif (this.socket) {\r\n\t\t\tthis.socket.close();\r\n\t\t}\r\n\t\tthis.connection.connecting = false;\r\n\t\tthis.socket = null;\r\n\t\tthis.reset();\r\n\t\tif (e) {\r\n\t\t\tthis.client.emit('disconnect', {code: e.code, message: e.reason});\r\n\t\t} else {\r\n\t\t\tthis.client.emit('disconnect');\r\n\t\t}\r\n\t}\r\n\ton() {\r\n\t\tif (this.connection.status.connected || this.socket) return;\r\n\t\tthis.connection.closed = false;\r\n\t\tthis.socket = new SockJS(`http://${this.client.host}:${this.client.port}/showdown/`);\r\n\t\tthis.socket.onerror = () => {\r\n\t\t\tthis.destroy();\r\n\t\t};\r\n\t\tthis.socket.onopen = () => {\r\n\t\t\tthis.connection.connecting = false;\r\n\t\t\tthis.connection.conntime = Date.now();\r\n\t\t\tthis.connection.attemps = 0;\r\n\t\t\tthis.client.emit('connect', this.socket);\r\n\t\t};\r\n\t\tthis.socket.onclose = (e: any) => {\r\n\t\t\tthis.destroy(e);\r\n\t\t};\r\n\t\tthis.socket.onmessage = (e: any) => {\r\n\t\t\tlet data = e.data;\r\n\t\t\tif (typeof data !== 'string') {\r\n\t\t\t\tdata = JSON.stringify(data);\r\n\t\t\t}\r\n\t\t\tthis.chat.receive(data);\r\n\t\t\tthis.connection.activity.date = Date.now();\r\n\t\t};\r\n\t\tthis.connection.connecting = true;\r\n\t\tthis.client.emit('connecting');\r\n\t}\r\n\treconnect() {\r\n\t\treturn this.connection.reconnect();\r\n\t}\r\n\tsend(data: any, room?: string) {\r\n\t\tif (!room) room = '';\r\n\t\tif (!(data instanceof Array)) {\r\n\t\t\tdata = [data.toString()];\r\n\t\t}\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tdata[i] = room + '|' + data[i];\r\n\t\t}\r\n\t\treturn this.sendBase(data);\r\n\t}\r\n\t/**\r\n\t * Primitive send\r\n\t * @private\r\n\t * @param {string} data\r\n\t */\r\n\tsendBase(data: string) {\r\n\t\tif (!this.socket) return null;\r\n\t\tconst id = this.getSendId();\r\n\t\tconst manager = new SendManager(\r\n\t\t\tdata,\r\n\t\t\t3,\r\n\t\t\t(msg: string) => {\r\n\t\t\t\tthis.socket.send(msg);\r\n\t\t\t\tthis.client.emit('send', msg);\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tdelete this.sending[id];\r\n\t\t\t},\r\n\t\t);\r\n\t\tthis.sending[id] = manager;\r\n\t\tmanager.start();\r\n\t\treturn manager;\r\n\t}\r\n\treset() {\r\n\t\tfor (const k in this.sending) {\r\n\t\t\tthis.sending[k].kill();\r\n\t\t\tdelete this.sending[k];\r\n\t\t}\r\n\t\tthis.nextSend = 0;\r\n\t\tthis.client.rooms.clear();\r\n\t\tthis.client.users.clear();\r\n\t\tthis.connection.conntime = 0;\r\n\t}\r\n}"],
  "mappings": "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",
  "names": []
}
