{
  "version": 3,
  "sources": ["../../../src/managers/chat.ts"],
  "sourcesContent": ["\r\nconst DEFAULT_ROOM = 'lobby';\r\n\r\nimport { RoomListManager } from \"./roomlist\";\r\nimport {MessageHandler} from '../structures';\r\nimport { toId } from \"../lib\";\r\n\r\nexport class ChatManager {\r\n    client: Client;\r\n    roomlist: RoomListManager;\r\n    group: string;\r\n\tconstructor(client: Client) {\r\n        this.client = client;\r\n        this.group = '';\r\n\t\tthis.roomlist = new RoomListManager(client);\r\n\t}\r\n\treceive(msg: string) {\r\n\t\tthis.receiveMsg(msg);\r\n\t}\r\n\treceiveMsg(msg: string) {\r\n\t\tif (!msg) return;\r\n\t\tif (msg.includes('\\n')) {\r\n\t\t\tconst lines = msg.split('\\n');\r\n\t\t\tlet room: RoomID =  DEFAULT_ROOM;\r\n\t\t\tlet firstLine = 0;\r\n\t\t\tif (lines[0].charAt(0) === '>') {\r\n\t\t\t\troom = lines[0].substring(1) as RoomID || DEFAULT_ROOM;\r\n\t\t\t\tfirstLine = 1;\r\n\t\t\t}\r\n\t\t\tfor (let i = firstLine; i < lines.length; i++) {\r\n\t\t\t\tif (lines[i].split('|')[1] === 'init') {\r\n\t\t\t\t\tfor (let j = i; j < lines.length; j++) {\r\n\t\t\t\t\t\tthis.parseLine(room, lines[j], true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.parseLine(room, lines[i], false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.parseLine(DEFAULT_ROOM, msg, false);\r\n\t\t}\r\n\t}\r\n\tparseLine(roomid: RoomID|ID, data: string, isInit: boolean) {\r\n\t\tconst splittedLine = data.substring(1).split('|');\r\n\t\tlet channel;\r\n\t\tthis.client.emit('parseLine', roomid, data, isInit, splittedLine);\r\n\t\tswitch (splittedLine[0]) {\r\n\t\t\tcase 'formats':\r\n\t\t\t\tconst formats = data.substring(splittedLine[0].length + 2);\r\n\t\t\t\tthis.client.formats.update(formats);\r\n\t\t\t\tthis.client.emit('formats', formats);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'challstr':\r\n\t\t\t\tthis.client._login.challengekeyid = splittedLine[1];\r\n\t\t\t\tthis.client._login.challenge = splittedLine[2];\r\n\t\t\t\tthis.client.login(this.client.name, this.client.pass);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'c:':\r\n\t\t\t\tif (isInit) break;\r\n\t\t\t\tif (!this.client.rooms.has(roomid as ID)) return; // Shouldn't happened - throw error\r\n\t\t\t\tif (!this.client.users.has(splittedLine[2] as ID)) {\r\n\t\t\t\t\tthis.client.users.create({\r\n\t\t\t\t\t\tname: splittedLine[2],\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.client.users.check(splittedLine[2] as ID);\r\n\t\t\t\tchannel = new MessageHandler(this.client, {\r\n\t\t\t\t\troom: roomid,\r\n\t\t\t\t\ttype: 'room',\r\n\t\t\t\t\tdate: splittedLine[1],\r\n\t\t\t\t\tuser: splittedLine[2],\r\n\t\t\t\t\tcontent: splittedLine.slice(3).join('|'),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'c':\r\n\t\t\t\tif (isInit) break;\r\n\t\t\t\tif (!this.client.rooms.has(roomid as ID)) return; // Shouldn't happened - throw error\r\n\t\t\t\tif (!this.client.users.has(splittedLine[1] as ID)) {\r\n\t\t\t\t\tthis.client.users.create({\r\n\t\t\t\t\t\tname: splittedLine[1],\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.client.users.check(splittedLine[1] as ID);\r\n\t\t\t\tchannel = new MessageHandler(this.client, {\r\n\t\t\t\t\troom: roomid,\r\n\t\t\t\t\ttype: 'room',\r\n\t\t\t\t\tdate: Date.now(),\r\n\t\t\t\t\tuser: splittedLine[1],\r\n\t\t\t\t\tcontent: splittedLine.slice(2).join('|'),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'updateuser':\r\n\t\t\t\tif (toId(splittedLine[1]) !== toId(this.client.name)) return;\r\n\t\t\t\tthis.client.send('/cmd rooms');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pm':\r\n\t\t\t\tif (!this.client.users.has(splittedLine[1] as ID)) {\r\n\t\t\t\t\tthis.client.users.create({\r\n\t\t\t\t\t\tname: splittedLine[1],\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.client.users.check(splittedLine[1] as ID);\r\n\t\t\t\tchannel = new MessageHandler(this.client, {\r\n\t\t\t\t\ttype: 'pm',\r\n\t\t\t\t\tuser: splittedLine[1],\r\n\t\t\t\t\tcontent: splittedLine.slice(3).join('|'),\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'join':\r\n\t\t\tcase 'j':\r\n\t\t\tcase 'J':\r\n\t\t\t\tif (isInit) break; // no nos interesa del pasado\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'l':\r\n\t\t\tcase 'L':\r\n\t\t\t\tif (isInit) break; // no nos interesa del pasado\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'init':\r\n\t\t\t\tthis.client.rooms.create({\r\n\t\t\t\t\tname: roomid,\r\n\t\t\t\t\ttype: splittedLine[1],\r\n\t\t\t\t});\r\n\t\t\t\tthis.client.send('/cmd roominfo ' + roomid);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'deinit':\r\n\t\t\t\tif (this.client.rooms.has(roomid as ID)) {\r\n\t\t\t\t\tthis.client.emit('leaveRoom', this.client.rooms.get(roomid as ID));\r\n\t\t\t\t\tthis.client.rooms.remove(roomid as ID);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'title':\r\n\t\t\t\tif (this.client.rooms.has(roomid as ID)) {\r\n\t\t\t\t\tthis.client.rooms.get(roomid as ID).update({\r\n\t\t\t\t\t\tname: splittedLine[1],\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'users':\r\n\t\t\t\tif (!this.client.rooms.has(roomid as ID)) break;\r\n\t\t\t\tconst userArr = data.substr(9).split(',');\r\n\t\t\t\tthis.client.rooms.get(roomid as ID).update({\r\n\t\t\t\t\tusers: userArr,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'raw':\r\n\t\t\tcase 'html':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'queryresponse':\r\n\t\t\t\tswitch (splittedLine[1]) {\r\n\t\t\t\t\tcase 'userdetails':\r\n\t\t\t\t\t\tif (!this.client.socket.connection.status.named) break;\r\n\t\t\t\t\t\tconst data = JSON.parse(splittedLine[2]);\r\n\t\t\t\t\t\tif (data === null) break;\r\n\t\t\t\t\t\tif (data.id === toId(this.client.name)) {\r\n\t\t\t\t\t\t\tconst data = JSON.parse(splittedLine[2]);\r\n\t\t\t\t\t\t\tif (data.group) this.group = data.group;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.client.users.update(data.id, {\r\n\t\t\t\t\t\t\t\tname: data.name,\r\n\t\t\t\t\t\t\t\tgroup: data.group,\r\n\t\t\t\t\t\t\t\tavatar: data.avatar,\r\n\t\t\t\t\t\t\t\tautoconfirmed: data.autoconfirmed,\r\n\t\t\t\t\t\t\t\tstatus: data.status,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'roominfo':\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tlet data = JSON.parse(splittedLine[2]);\r\n\t\t\t\t\t\t\tif (!data.id) break;\r\n\t\t\t\t\t\t\tif (this.client.rooms.has(data.id)) {\r\n\t\t\t\t\t\t\t\tlet room = this.client.rooms.get(data.id);\r\n\t\t\t\t\t\t\t\tif (!room) break; // Should never happen really.\r\n\t\t\t\t\t\t\t\tlet toUpdate = Object.create(null);\r\n\t\t\t\t\t\t\t\tlet ignore = new Set(['id', 'type', 'roomid']);\r\n\t\t\t\t\t\t\t\tfor (let i in data) {\r\n\t\t\t\t\t\t\t\t\tif (!ignore.has(i)) toUpdate[i] = data[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\troom.update(toUpdate);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'rooms':\r\n\t\t\t\t\t\tif (splittedLine[2] === 'null') break;\r\n\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\tconst roomData = JSON.parse(splittedLine.slice(2));\r\n\r\n\t\t\t\t\t\tfor (const i in roomData['official']) {\r\n\t\t\t\t\t\t\tif (!this.roomlist.isOfficial.has(roomData['official'][i].title)) {\r\n\t\t\t\t\t\t\t\tthis.roomlist.isOfficial.add(roomData['official'][i].title);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (const i in roomData['chat']) {\r\n\t\t\t\t\t\t\tif (!this.roomlist.isChat.has(roomData['chat'][i].title)) {\r\n\t\t\t\t\t\t\t\tthis.roomlist.isChat.add(roomData['chat'][i].title);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.roomlist.check();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'N':\r\n\t\t\t\tif (~data.indexOf('\\n')) {\r\n\t\t\t\t\t//\tthis.logChat(toId(roomid), data.trim());\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase '':\r\n\t\t\t\t//this.logChat(toId(roomid), parts.slice(2).join(\"|\"));\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (channel !== undefined) this.client.emit('message', channel);\r\n\t}\r\n}"],
  "mappings": "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",
  "names": ["data"]
}
