{
  "version": 3,
  "sources": ["../../../../src/managers/cache/users.ts"],
  "sourcesContent": ["/**\r\n *  Manager of the users\r\n */\r\nimport { BaseCache } from \"./base\";\r\nimport { User } from \"../../structures\";\r\nimport { toId } from \"../../lib\";\r\n\r\nexport class UserManager extends BaseCache {\r\n\tclient: Client\r\n\tconstructor(client: Client) {\r\n\t\tsuper();\r\n\t\tthis.client = client;\r\n\t}\r\n\t/**\r\n\t * Remove a user from the cache\r\n\t * @param {String} user\r\n\t * @throws {Error} if the user does not exist\r\n\t */\r\n\tremove(user: ID): boolean {\r\n\t\tif (!this.has(user)) throw Error(\"User doesn't exist\"); // No user exists\r\n\t\tsuper.remove(user);\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * Create a user in the cache\r\n\t * @param {Object} data\r\n\t * @throws {Error} if the user already exist\r\n\t */\r\n\tcreate(data: any){\r\n\t\tif (this.has(data.name)) throw Error('User already exist'); // Error User already Exist\r\n\t\tsuper.create(toId(data.name) as ID, new User(data, this.client));\r\n\t\treturn true;\r\n\t}\r\n\tcheck(user: ID) {\r\n\t\tthis.client.send(`/cmd userdetails ${user}`);\r\n\t}\r\n\tupdate(user: ID, data: AnyObject) {\r\n\t\tlet uid = toId(user) as ID;\r\n\t\tif (!this.has(uid)) return null;\r\n\t\treturn this.get(uid).update(data);\r\n\t}\r\n\t/**\r\n\t * Get user's name\r\n\t * @param {String} user\r\n\t */\r\n\tresolveName(user: ID) {\r\n\t\tif (!this.has(user)) return false;\r\n\t\treturn this.get(user).name;\r\n\t}\r\n\t/**\r\n\t * Get user's id\r\n\t * @param {String} user\r\n\t */\r\n\tresolve(user: ID) {\r\n\t\tif (!this.has(user)) return false;\r\n\t\treturn this.get(user).id;\r\n\t}\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,kBAA0B;AAC1B,wBAAqB;AACrB,iBAAqB;AAEd,MAAM,oBAAoB,sBAAU;AAAA,EAE1C,YAAY,QAAgB;AAC3B,UAAM;AACN,SAAK,SAAS;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,MAAmB;AACzB,QAAI,CAAC,KAAK,IAAI,IAAI;AAAG,YAAM,MAAM,oBAAoB;AACrD,UAAM,OAAO,IAAI;AACjB,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,MAAU;AAChB,QAAI,KAAK,IAAI,KAAK,IAAI;AAAG,YAAM,MAAM,oBAAoB;AACzD,UAAM,WAAO,iBAAK,KAAK,IAAI,GAAS,IAAI,uBAAK,MAAM,KAAK,MAAM,CAAC;AAC/D,WAAO;AAAA,EACR;AAAA,EACA,MAAM,MAAU;AACf,SAAK,OAAO,KAAK,oBAAoB,MAAM;AAAA,EAC5C;AAAA,EACA,OAAO,MAAU,MAAiB;AACjC,QAAI,UAAM,iBAAK,IAAI;AACnB,QAAI,CAAC,KAAK,IAAI,GAAG;AAAG,aAAO;AAC3B,WAAO,KAAK,IAAI,GAAG,EAAE,OAAO,IAAI;AAAA,EACjC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,MAAU;AACrB,QAAI,CAAC,KAAK,IAAI,IAAI;AAAG,aAAO;AAC5B,WAAO,KAAK,IAAI,IAAI,EAAE;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,MAAU;AACjB,QAAI,CAAC,KAAK,IAAI,IAAI;AAAG,aAAO;AAC5B,WAAO,KAAK,IAAI,IAAI,EAAE;AAAA,EACvB;AACD;",
  "names": []
}
