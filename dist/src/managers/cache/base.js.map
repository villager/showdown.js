{
  "version": 3,
  "sources": ["../../../../src/managers/cache/base.ts"],
  "sourcesContent": ["\r\nimport { toId } from \"../../lib\";\r\n\r\nexport class BaseCache extends Map {\r\n\t/**\r\n\t * Create a new element in the cache\r\n\t * @param {String} id\r\n\t * @param {any} arg\r\n\t */\r\n\tcreate(id: ID, arg: any) {\r\n\t\tlet ID = toId(id) as ID;\r\n\t\tif (this.has(ID))  return false;\r\n\t\tthis.set(ID, arg);\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * Remove an element from the cache\r\n\t * @param {String} id\r\n\t */\r\n\tremove(id: ID): boolean {\r\n\t\tlet ID = toId(id) as ID;\r\n\t\tif (!this.has(ID))  return false;\r\n\t\tthis.remove(ID);\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * Check if a elment exists in the cache\r\n\t * @param {String} id\r\n\t * @returns {Boolean} Returns a Boolean\r\n\t */\r\n\thas(id: ID): boolean {\r\n\t\tlet ID = toId(id) as ID;\r\n\t\tif (!super.has(ID)) return false;\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * Get an element from the cache\r\n\t * @param {String} id\r\n\t * @returns {(User|Room)} Return the data from the cache\r\n\t */\r\n\tget(id: ID) {\r\n\t\tlet ID = toId(id) as ID;\r\n\t\tif (!this.has(ID)) return false;\r\n\t\treturn super.get(ID);\r\n\t}\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,iBAAqB;AAEd,MAAM,kBAAkB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMlC,OAAO,IAAQ,KAAU;AACxB,QAAI,SAAK,iBAAK,EAAE;AAChB,QAAI,KAAK,IAAI,EAAE;AAAI,aAAO;AAC1B,SAAK,IAAI,IAAI,GAAG;AAChB,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,IAAiB;AACvB,QAAI,SAAK,iBAAK,EAAE;AAChB,QAAI,CAAC,KAAK,IAAI,EAAE;AAAI,aAAO;AAC3B,SAAK,OAAO,EAAE;AACd,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,IAAiB;AACpB,QAAI,SAAK,iBAAK,EAAE;AAChB,QAAI,CAAC,MAAM,IAAI,EAAE;AAAG,aAAO;AAC3B,WAAO;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,IAAQ;AACX,QAAI,SAAK,iBAAK,EAAE;AAChB,QAAI,CAAC,KAAK,IAAI,EAAE;AAAG,aAAO;AAC1B,WAAO,MAAM,IAAI,EAAE;AAAA,EACpB;AACD;",
  "names": []
}
