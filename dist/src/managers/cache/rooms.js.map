{
  "version": 3,
  "sources": ["../../../../src/managers/cache/rooms.ts"],
  "sourcesContent": ["/**\r\n * Rooms Cache\r\n */\r\nimport { BaseCache } from \"./base\";\r\nimport {Room} from '../../structures';\r\nimport { toId } from \"../../lib\";\r\n\r\nexport class RoomManager extends BaseCache {\r\n\t/**\r\n\t * Our Manager of rooms\r\n\t * @constructor\r\n\t * @param {Client} client\r\n\t */\r\n    client: Client;\r\n\tconstructor(client: Client) {\r\n\t\tsuper();\r\n        this.client = client;\r\n\t}\r\n\t/**\r\n\t * Create a new room in the cache\r\n\t * @param {Object} data\r\n\t * @throws {Error} If the room already exist\r\n\t */\r\n\tcreate(data: any) {\r\n\t\tif (this.has(data.name)) return false; // Thow error already exist\r\n\t\tsuper.create(toId(data.name) as ID, new Room(data, this.client));\r\n        return true;\r\n\t}\r\n\t/**\r\n\t * Remove a room in the cache\r\n\t * @param {String} id\r\n\t * @throws {Error} Throw if the room does not exist\r\n\t */\r\n\tremove(id: ID) {\r\n\t\tif (!this.has(id)) return false; // Throw error no room exist\r\n\t\tsuper.remove(id);\r\n        return true;\r\n\t}\r\n\t/**\r\n\t * Get room's name\r\n\t * @param {String} id\r\n\t */\r\n\tresolveName(id: ID) {\r\n\t\tif (!this.has(id)) return false;\r\n\t\treturn this.get(id).name;\r\n\t}\r\n\t/**\r\n\t * Get room's id\r\n\t * @param {String} user\r\n\t */\r\n\tresolve(user: ID) {\r\n\t\tif (!this.has(user)) return false;\r\n\t\treturn this.get(user).id;\r\n\t}\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,kBAA0B;AAC1B,wBAAmB;AACnB,iBAAqB;AAEd,MAAM,oBAAoB,sBAAU;AAAA,EAO1C,YAAY,QAAgB;AAC3B,UAAM;AACA,SAAK,SAAS;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,MAAW;AACjB,QAAI,KAAK,IAAI,KAAK,IAAI;AAAG,aAAO;AAChC,UAAM,WAAO,iBAAK,KAAK,IAAI,GAAS,IAAI,uBAAK,MAAM,KAAK,MAAM,CAAC;AACzD,WAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,IAAQ;AACd,QAAI,CAAC,KAAK,IAAI,EAAE;AAAG,aAAO;AAC1B,UAAM,OAAO,EAAE;AACT,WAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,YAAY,IAAQ;AACnB,QAAI,CAAC,KAAK,IAAI,EAAE;AAAG,aAAO;AAC1B,WAAO,KAAK,IAAI,EAAE,EAAE;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,MAAU;AACjB,QAAI,CAAC,KAAK,IAAI,IAAI;AAAG,aAAO;AAC5B,WAAO,KAAK,IAAI,IAAI,EAAE;AAAA,EACvB;AACD;",
  "names": []
}
